# Generated by Django 3.1.5 on 2025-04-15 23:51

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('gymkhana', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievements',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('club_name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('achievement', models.TextField()),
            ],
            options={
                'db_table': 'Achievements',
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('budget_for', models.CharField(max_length=256)),
                ('budget_requested', models.IntegerField(default=0)),
                ('budget_allocated', models.IntegerField(default=0, null=True)),
                ('budget_file', models.FileField(null=True, upload_to='uploads/')),
                ('description', models.TextField(max_length=256)),
                ('status', models.CharField(choices=[('ACCEPT', 'Accepted'), ('REJECT', 'Rejected'), ('COORDINATOR', 'Coordinator Review'), ('FIC', 'FIC Review'), ('COUNSELLOR', 'Counsellor Review'), ('DEAN', 'Dean Review'), ('REREVIEW', 'ReReview')], default='COORDINATOR', max_length=50)),
                ('remarks', models.CharField(max_length=256, null=True)),
                ('budget_comment', models.CharField(max_length=2000, null=True)),
            ],
            options={
                'db_table': 'Budget',
            },
        ),
        migrations.CreateModel(
            name='Budget_Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentator_designation', models.CharField(max_length=100)),
                ('comment', models.TextField()),
                ('comment_date', models.DateField(default=django.utils.timezone.now)),
                ('comment_time', models.TimeField(default=django.utils.timezone.now)),
                ('budget_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='gymkhana.budget')),
            ],
            options={
                'db_table': 'Budget_Comments',
            },
        ),
        migrations.CreateModel(
            name='ClubPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(choices=[('FIC', 'FIC'), ('COORDINATOR', 'Coordinator'), ('TECHNICAL_COUNSELLOR', 'Technical counsellor'), ('SPORTS_COUNSELLOR', 'Sports counsellor'), ('CULTURAL_COUNSELLOR', 'Cultural counsellor')], max_length=50)),
            ],
            options={
                'db_table': 'ClubPosition',
            },
        ),
        migrations.CreateModel(
            name='Event_Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentator_designation', models.CharField(max_length=100)),
                ('comment', models.TextField()),
                ('comment_date', models.DateField(default=django.utils.timezone.now)),
                ('comment_time', models.TimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'Event_Comments',
            },
        ),
        migrations.CreateModel(
            name='EventInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=500)),
                ('images', models.ImageField(null=True, upload_to='gymkhana/event_images')),
            ],
        ),
        migrations.CreateModel(
            name='EventReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('venue', models.CharField(max_length=100)),
                ('incharge', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('event_budget', models.DecimalField(decimal_places=2, max_digits=10)),
                ('special_announcement', models.TextField(blank=True, null=True)),
                ('report_pdf', models.FileField(blank=True, null=True, upload_to='event_reports/')),
            ],
            options={
                'db_table': 'EventReport',
            },
        ),
        migrations.CreateModel(
            name='Fest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('category', models.CharField(choices=[('Technical', 'Technical'), ('Sports', 'Sports'), ('Cultural', 'Cultural')], max_length=50)),
                ('description', models.TextField(max_length=256, null=True)),
                ('date', models.DateField(default=None)),
                ('link', models.CharField(max_length=256, null=True)),
            ],
            options={
                'db_table': 'fest',
            },
        ),
        migrations.RemoveField(
            model_name='voting_choices',
            name='poll_event',
        ),
        migrations.RemoveField(
            model_name='voting_voters',
            name='poll_event',
        ),
        migrations.RenameField(
            model_name='event_info',
            old_name='date',
            new_name='end_date',
        ),
        migrations.AddField(
            model_name='event_info',
            name='start_date',
            field=models.DateField(default=None),
        ),
        migrations.AlterField(
            model_name='change_office',
            name='status',
            field=models.CharField(choices=[('open', 'Open'), ('confirmed', 'Confirmed'), ('rejected', 'Rejected'), ('member', 'Member'), ('co-ordinator', 'Co-ordinator'), ('Co-cordinator', 'Co-cordinator')], default='open', max_length=50),
        ),
        migrations.AlterField(
            model_name='club_budget',
            name='status',
            field=models.CharField(choices=[('open', 'Open'), ('confirmed', 'Confirmed'), ('rejected', 'Rejected'), ('member', 'Member'), ('co-ordinator', 'Co-ordinator'), ('Co-cordinator', 'Co-cordinator')], default='open', max_length=50),
        ),
        migrations.AlterField(
            model_name='club_info',
            name='status',
            field=models.CharField(choices=[('open', 'Open'), ('confirmed', 'Confirmed'), ('rejected', 'Rejected'), ('member', 'Member'), ('co-ordinator', 'Co-ordinator'), ('Co-cordinator', 'Co-cordinator')], default='open', max_length=50),
        ),
        migrations.AlterField(
            model_name='club_member',
            name='status',
            field=models.CharField(choices=[('open', 'Open'), ('confirmed', 'Confirmed'), ('rejected', 'Rejected'), ('member', 'Member'), ('co-ordinator', 'Co-ordinator'), ('Co-cordinator', 'Co-cordinator')], default='open', max_length=50),
        ),
        migrations.AlterField(
            model_name='event_info',
            name='status',
            field=models.CharField(choices=[('ACCEPT', 'Accepted'), ('REJECT', 'Rejected'), ('COORDINATOR', 'Coordinator Review'), ('FIC', 'FIC Review'), ('COUNSELLOR', 'Counsellor Review'), ('DEAN', 'Dean Review'), ('REREVIEW', 'ReReview')], default='open', max_length=50),
        ),
        migrations.AlterField(
            model_name='event_info',
            name='venue',
            field=models.CharField(choices=[('CR101', 'CR101'), ('CR102', 'CR102'), ('CR103', 'CR103'), ('CR104', 'CR104'), ('CR107', 'CR107'), ('CR108', 'CR108'), ('CR109', 'CR109'), ('CR201', 'CR201'), ('CR202', 'CR202'), ('CR208', 'CR208'), ('L101', 'L101'), ('L102', 'L102'), ('L103', 'L103'), ('L104', 'L104'), ('L105', 'L105'), ('L106', 'L106'), ('L107', 'L107'), ('L108', 'L108'), ('L201', 'L201'), ('L202', 'L202'), ('L206', 'L206'), ('L207', 'L207'), ('Football Ground', 'Football Ground'), ('Cricket Ground', 'Cricket Ground'), ('Basketball Ground', 'Basketball Ground'), ('Volleyball Ground', 'Volleyball Ground'), ('Tennis Court', 'Tennis Court'), ('Athletics Ground', 'Athletics Ground'), ('Badminton Court', 'Badminton Court'), ('Table Tennis Court', 'Table Tennis Court'), ('Chess Room', 'Chess Room'), ('Carrom Room', 'Carrom Room'), ('Gym', 'Gym'), ('CC First Floor', 'CC First Floor'), ('CC Second Floor', 'CC Second Floor'), ('CC Third Floor', 'CC Third Floor'), ('OAT', 'OAT')], max_length=50),
        ),
        migrations.AlterField(
            model_name='fest_budget',
            name='status',
            field=models.CharField(choices=[('open', 'Open'), ('confirmed', 'Confirmed'), ('rejected', 'Rejected'), ('member', 'Member'), ('co-ordinator', 'Co-ordinator'), ('Co-cordinator', 'Co-cordinator')], default='open', max_length=50),
        ),
        migrations.AlterField(
            model_name='session_info',
            name='status',
            field=models.CharField(choices=[('open', 'Open'), ('confirmed', 'Confirmed'), ('rejected', 'Rejected'), ('member', 'Member'), ('co-ordinator', 'Co-ordinator'), ('Co-cordinator', 'Co-cordinator')], default='open', max_length=50),
        ),
        migrations.AlterField(
            model_name='session_info',
            name='venue',
            field=models.CharField(choices=[('CR101', 'CR101'), ('CR102', 'CR102'), ('CR103', 'CR103'), ('CR104', 'CR104'), ('CR107', 'CR107'), ('CR108', 'CR108'), ('CR109', 'CR109'), ('CR201', 'CR201'), ('CR202', 'CR202'), ('CR208', 'CR208'), ('L101', 'L101'), ('L102', 'L102'), ('L103', 'L103'), ('L104', 'L104'), ('L105', 'L105'), ('L106', 'L106'), ('L107', 'L107'), ('L108', 'L108'), ('L201', 'L201'), ('L202', 'L202'), ('L206', 'L206'), ('L207', 'L207'), ('Football Ground', 'Football Ground'), ('Cricket Ground', 'Cricket Ground'), ('Basketball Ground', 'Basketball Ground'), ('Volleyball Ground', 'Volleyball Ground'), ('Tennis Court', 'Tennis Court'), ('Athletics Ground', 'Athletics Ground'), ('Badminton Court', 'Badminton Court'), ('Table Tennis Court', 'Table Tennis Court'), ('Chess Room', 'Chess Room'), ('Carrom Room', 'Carrom Room'), ('Gym', 'Gym'), ('CC First Floor', 'CC First Floor'), ('CC Second Floor', 'CC Second Floor'), ('CC Third Floor', 'CC Third Floor'), ('OAT', 'OAT')], max_length=50),
        ),
        migrations.DeleteModel(
            name='Core_team',
        ),
        migrations.DeleteModel(
            name='Voting_choices',
        ),
        migrations.DeleteModel(
            name='Voting_polls',
        ),
        migrations.DeleteModel(
            name='Voting_voters',
        ),
        migrations.AddField(
            model_name='eventreport',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gymkhana.event_info'),
        ),
        migrations.AddField(
            model_name='eventinput',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gymkhana.event_info'),
        ),
        migrations.AddField(
            model_name='event_comments',
            name='event_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='gymkhana.event_info'),
        ),
        migrations.AddField(
            model_name='clubposition',
            name='club',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gymkhana.club_info'),
        ),
        migrations.AddField(
            model_name='budget',
            name='club',
            field=models.ForeignKey(max_length=50, on_delete=django.db.models.deletion.CASCADE, to='gymkhana.club_info'),
        ),
    ]
